// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TraqBankingApp.Data;

#nullable disable

namespace TraqBankingApp.Migrations
{
    [DbContext(typeof(PeopleManagerContext))]
    [Migration("20251020171330_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TraqBankingApp.Models.Account", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("code");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Code"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("account_number");

                    b.Property<decimal>("OutstandingBalance")
                        .HasColumnType("money")
                        .HasColumnName("outstanding_balance");

                    b.Property<int>("PersonCode")
                        .HasColumnType("int")
                        .HasColumnName("person_code");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.HasKey("Code")
                        .HasName("PK_Accounts");

                    b.HasIndex("AccountNumber")
                        .IsUnique();

                    b.HasIndex("PersonCode");

                    b.HasIndex("StatusCode");

                    b.ToTable("Accounts", (string)null);
                });

            modelBuilder.Entity("TraqBankingApp.Models.Person", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("code");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Code"));

                    b.Property<string>("IdNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("id_number");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Surname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("surname");

                    b.HasKey("Code")
                        .HasName("PK_Persons");

                    b.HasIndex("IdNumber")
                        .IsUnique();

                    b.ToTable("Persons", (string)null);
                });

            modelBuilder.Entity("TraqBankingApp.Models.Status", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("code");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Code"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Code")
                        .HasName("PK_Status");

                    b.ToTable("Status", (string)null);

                    b.HasData(
                        new
                        {
                            Code = 1,
                            Name = "Open"
                        },
                        new
                        {
                            Code = 2,
                            Name = "Closed"
                        });
                });

            modelBuilder.Entity("TraqBankingApp.Models.TransactionEntry", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("code");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Code"));

                    b.Property<int>("AccountCode")
                        .HasColumnType("int")
                        .HasColumnName("account_code");

                    b.Property<decimal>("Amount")
                        .HasColumnType("money")
                        .HasColumnName("amount");

                    b.Property<DateTime>("CaptureDate")
                        .HasColumnType("datetime")
                        .HasColumnName("capture_date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("description");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime")
                        .HasColumnName("transaction_date");

                    b.HasKey("Code")
                        .HasName("PK_Transactions");

                    b.HasIndex("AccountCode");

                    b.ToTable("Transactions", (string)null);
                });

            modelBuilder.Entity("TraqBankingApp.Models.UserLogin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password_hash");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("PK_UserLogins");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("TraqBankingApp.Models.Account", b =>
                {
                    b.HasOne("TraqBankingApp.Models.Person", "Person")
                        .WithMany("Accounts")
                        .HasForeignKey("PersonCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Account_Person");

                    b.HasOne("TraqBankingApp.Models.Status", "Status")
                        .WithMany("Accounts")
                        .HasForeignKey("StatusCode");

                    b.Navigation("Person");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("TraqBankingApp.Models.TransactionEntry", b =>
                {
                    b.HasOne("TraqBankingApp.Models.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Transaction_Account");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("TraqBankingApp.Models.Account", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("TraqBankingApp.Models.Person", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("TraqBankingApp.Models.Status", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
